.. _mcq-moodle:

================================================================
MCQ-XeLaTeX: How to use it with Moodle and for online exams
================================================================

:Date:   2020-04-01 


Online exams, Multiple Choice Questions in XeLaTeX, and Moodle
==============================================================

Two type of assessment: multiple choice quiz, and mathematics essay.


Multiple Choice Questions
-------------------------

.. highlight:: bash

As in the :ref:`MCQ-Latex` documentation, create a XeLaTeX file with questions,
default marking values, and answers. 
Then simply generate a ``.gift`` file::

        $ mcq.py --gift filename.tex

The output can be imported in `MOODLE <https://www.moodle.org>`_ as plain/text file. 
The newlines will be converted in brealines, so just edit the GIFT file with
a text editor to modify as needed. 

Then, in MOODLE, import the questions (format: GIFT; in a self-contained **category** entry -- create it first; 
fix the latex and other things if necessary). 

The quiz can be generated: each question score is normalized to **1**. Just add all necessary questions
to a Moodle quiz (permuted answers and questions, duration, ...). 


Essay Questions
---------------

   
Being mathematics, you need to give a PDF document as exam, and expect the student to upload 
a PDF document at the end of the exam duration. 

.. highlight:: latex

So, write a tex file as described in :ref:`MCQ-Latex`, full of exercises 
with variants and solutions::

   \usepackage[bubblesheet,doexe,sol]{mcq}
   ...
   \begin{esercizi*}{}
   ...
   \begin{exe}
   \begin{varianti}
   \varitem
   Question 1 \blank{Answer 1}
   \varitem
   Question 2 \blank{Answer 2}
   \varitem
   Question 3 \blank{Answer 3}
   \end{varianti}
   \end{exe}
   ...
   \end{esercizi*}

.. highlight:: bash

Variants can be automatically generated by :ref:`casengine`, if necessary. 
Now, generate a number of copies (either with mcq CLI, or with the command)::

        $ mcq.py -n 50 filename.tex
        $ xelatex filename_exam.tex
        $ xelatex filename_exam.tex

Remove the ``sol`` option to remove the warning. 


Now, how to split the output ``filename_exam.pdf`` into 50 single PDF documents, and assign
one to each to the students? 

Just use the ``--split-for-moodle=`` option in mcq:: 

        $ mcq.py --split-for-moodle=https://www.example.com/mdl/ filename_exam.pdf

It will split the ``PDF`` document into 50 documents, each tagged with the unique four-characters 
code of the variant, and generate a **moodle XML** archive of 50 essay questions  
each linking to the proper PDF in the external URL. 

Upload all the single PDF documents to the suitable public website, given as argument.  
They are contained in a folder (with scrambled name), to be uploaded to the remote folder.

Create a **category** in moodle. Import the XML questions file in the catogory.
Then create a moodle quiz with just one random question taken from the category. 


  The files are supposed to be hosted in an **external web site** (until I will understand 
  how to predict uploaded file URLs, in moodle). 


